import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
public class Bullet_Concept implements KeyListener, ActionListener{
     int deg = 90;//degree of rotation
     double x = 0;//for sin
     double y = 0;//for cos
     JFrame f = new JFrame();
     JPanel fp = new JPanel();
     Draw pan = new Draw();
     
     Bullet_Concept(){
          f.add(fp);
          fp.add(pan);
          pan.addKeyListener(this);
          fp.setPreferredSize(new Dimension(400, 400));
          f.pack();
          f.setVisible(true);
          pan.requestFocus();
     }
     public void keyTyped(KeyEvent e){
          int key = e.getKeyCode();
          if (key == 32){
               
          }
          else if (key == 37){
               deg -= 5;
               x = Math.sin(Math.toRadians(deg));
               y = Math.cos(Math.toRadians(deg));
               pan.updateRotation(x, y, 2);
          }
          else if (key == 39){
               deg += 5;
               x = Math.sin(Math.toRadians(deg));
               y = Math.cos(Math.toRadians(deg));
               pan.updateRotation(x, y, 2);
          }
     }
     public void keyPressed(KeyEvent e){
          int key = e.getKeyCode();
          if (key == 37){
               deg -= 5;
               x = Math.sin(Math.toRadians(deg));
               y = Math.cos(Math.toRadians(deg));
               pan.updateRotation(x, y, 2);
          }
          else if (key == 39){
               deg += 5;
               x = Math.sin(Math.toRadians(deg));
               y = Math.cos(Math.toRadians(deg));
               pan.updateRotation(x, y, 2);
          }
     }
     public void keyReleased(KeyEvent e){
          
     }
}
class Draw extends JPanel{
     int type;
     double x;
     double y;
     public void updateRotation(double x, double y, int type){
          x = this.x;
          y = this.y;
          type = this.type;
          repaint();
     }
     public void paintComponent(Graphics g){
          super.paintComponent(g);
          if (type == 2){
               Rotate (g);
          }
     }
     
     public void Rotate(Graphics g){
          g.setColor(Color.red);
          g.fillRect((int)(x * 50 + 200), (int)(y * 50 + 200), (int)(x * 50 + 250), (int)(y * 50 + 250));
     }
}
